{"version":3,"sources":["components/App/App.styled.tsx","components/atoms/Title/Title.styled.tsx","components/atoms/LinkButton/LinkButton.styled.tsx","components/pages/Home/Home.styled.tsx","components/pages/Home/Home.tsx","context/scoreContext.tsx","components/atoms/Button/Button.styled.tsx","components/pages/GameOver/GameOver.styled.tsx","components/pages/GameOver/GameOver.tsx","utils/gql/graphql.ts","hooks/useSurvey.ts","components/organisms/Survey/Survey.styled.tsx","components/molecules/LinearProgressWithLabels/LinearProgressWithLabels.tsx","components/organisms/Survey/Survey.tsx","components/pages/SurveyPage/SurveyPage.tsx","components/App/App.tsx","reportWebVitals.ts","GlobalStyle.tsx","index.tsx"],"names":["Container","styled","div","Box","span","Link","Description","p","PlayButton","LinkButton","Home","data-testid","to","ScoreContext","React","createContext","result","score","seconds","results","pushResult","saveResult","ScoreProvider","children","useState","setResult","setResults","initValue","res","sort","a","b","Provider","value","button","SubContainer","css","ScoreContainer","InputContainer","Label","TryButton","Button","NameInput","input","AddButton","GameOver","history","useHistory","useContext","setInput","display","setDisplay","onClick","push","length","slice","map","r","index","name","onChange","e","target","disabled","GET_MOVIES_AND_PEOPLE","gql","getActor","movie","people","movieActorIds","node","credits","cast","c","id","person","shuffle","find","includes","image","profilePicture","getNoQuestions","movies","nb","cp","Math","floor","random","title","poster","m","actor","answer","generateNoQuestion","getYesQuestions","generateYesQuestion","Portrait","img","PortraitContainer","YesButton","NoButton","ButtonContainer","LinearProgressWithLabels","props","sx","alignItems","justifyContent","margin","minWidth","Typography","variant","color","time","width","mr","LinearProgress","Survey","data","counter","setSurveyState","setSeconds","useEffect","interval","setInterval","prevState","clearInterval","wrongAnswer","rightAnswer","src","alt","SurveyPage","survey","useQuery","errorPolicy","loading","error","yesQuestions","popular","edges","noQuestions","useSurvey","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.eff38f5d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  width: 40vw;\r\n  min-width: 300px;\r\n  margin: 100px;\r\n  padding: 20px;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.08);\r\n  border-radius: 20px;\r\n  background-color: #ffffff;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    box-shadow: none;\r\n    border: 3px solid #19a0fc;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.span`\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  font-style: normal;\r\n  color: #000000;\r\n  margin: 30px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default styled(Link)`\r\n  background: #000000;\r\n  border-radius: 12px;\r\n  padding: 16px 24px;\r\n  color: #ffffff;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin: 30px;\r\n  text-decoration: none;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { LinkButton } from \"../../atoms/LinkButton\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  color: #7c7c7c;\r\n  margin: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const PlayButton = styled(LinkButton)`\r\n  background: #7059ff;\r\n`;\r\n","import React from \"react\";\r\nimport { Title } from \"../../atoms/Title\";\r\nimport { Container, Description, PlayButton } from \"./Home.styled\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <Title data-testid=\"home-title\">Ready to play?</Title>\r\n      <Description data-testid=\"home-desc\">\r\n        Be the best in finding the perfect pairing between actors and movies.\r\n        Press play and let’s have some fun!\r\n      </Description>\r\n      <PlayButton to=\"/survey\">Press play and let’s go</PlayButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\n\r\ntype Result = {\r\n  score: number;\r\n  seconds: number;\r\n  name?: string;\r\n};\r\n\r\nexport type ScoreContextType = {\r\n  result?: Result | null;\r\n  results: Result[];\r\n  pushResult: (result: Result) => void;\r\n  saveResult: (result: Omit<Result, \"name\"> & { name: string }) => void;\r\n};\r\n\r\nexport const ScoreContext = React.createContext<ScoreContextType>({\r\n  result: { score: 0, seconds: 0 },\r\n  results: [],\r\n  pushResult: (result) => false,\r\n  saveResult: (result) => false,\r\n});\r\n\r\nexport const ScoreProvider: React.FC = ({ children }) => {\r\n  const [result, setResult] = useState<Result | null>(null);\r\n  const [results, setResults] = useState<Result[]>([]);\r\n\r\n  const initValue: ScoreContextType = {\r\n    result,\r\n    results,\r\n    pushResult: (res) => setResult(res),\r\n    saveResult: (res) =>\r\n      setResults([res, ...results].sort((a, b) => b.score - a.score)),\r\n  };\r\n\r\n  return (\r\n    <ScoreContext.Provider value={initValue}>{children}</ScoreContext.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.button`\r\n  background: #000000;\r\n  border-radius: 12px;\r\n  padding: 16px 24px;\r\n  color: #ffffff;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin: 30px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Button } from \"../../atoms/Button\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst SubContainer = css`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-self: stretch;\r\n`;\r\n\r\nexport const ScoreContainer = styled.div`\r\n  ${SubContainer}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  ${SubContainer}\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  color: #7c7c7c;\r\n`;\r\n\r\nexport const TryButton = styled(Button)`\r\n  background: #7059ff;\r\n`;\r\n\r\nexport const NameInput = styled.input`\r\n  border: 1px solid #7c7c7c;\r\n  box-sizing: border-box;\r\n  border-radius: 12px;\r\n  margin: 30px 0;\r\n  padding: 0 20px;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  font-style: normal;\r\n  color: #000000;\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled(Button)`\r\n  background: #7059ff;\r\n  margin: 30px 0 30px 30px;\r\n\r\n  &:disabled {\r\n    background: #8f85c0;\r\n  }\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ScoreContext } from \"../../../context/scoreContext\";\r\nimport { Title } from \"../../atoms/Title\";\r\nimport {\r\n  Container,\r\n  TryButton,\r\n  AddButton,\r\n  InputContainer,\r\n  NameInput,\r\n  ScoreContainer,\r\n  Label,\r\n} from \"./GameOver.styled\";\r\n\r\nconst GameOver = () => {\r\n  const history = useHistory();\r\n  const { result, results, saveResult } = useContext(ScoreContext);\r\n  const [input, setInput] = useState(\"\");\r\n  const [display, setDisplay] = useState(true);\r\n\r\n  return (\r\n    <Container>\r\n      {result && (\r\n        <>\r\n          <Title>{result.score === 10 ? \"Well done\" : \"Game over\"}</Title>\r\n          <ScoreContainer>\r\n            <Label>Time spent in the game</Label>\r\n            <Label data-testid=\"over-seconds\">{`${result.seconds} s`}</Label>\r\n          </ScoreContainer>\r\n          <ScoreContainer>\r\n            <Label>Good answers</Label>\r\n            <Label data-testid=\"over-score\">{`${result.score} good answer(s)`}</Label>\r\n          </ScoreContainer>\r\n        </>\r\n      )}\r\n\r\n      <TryButton\r\n        data-testid=\"over-tryagain\"\r\n        onClick={() => history.push(\"/survey\")}\r\n      >\r\n        Try again\r\n      </TryButton>\r\n      {results.length > 0 && <Title>Highscore</Title>}\r\n      {results.slice(0, 10).map((r, index) => (\r\n        <ScoreContainer key={index}>\r\n          <Label>{r.name}</Label>\r\n          <Label>{`${r.seconds} s`}</Label>\r\n          <Label>{`${r.score} good answer(s)`}</Label>\r\n        </ScoreContainer>\r\n      ))}\r\n\r\n      {display && result && (\r\n        <>\r\n          <InputContainer>\r\n            <NameInput\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n            />\r\n            <AddButton\r\n              data-testid=\"over-add\"\r\n              disabled={input.length === 0}\r\n              onClick={() => {\r\n                saveResult({ ...result, name: input });\r\n                setInput(\"\");\r\n                setDisplay(false);\r\n              }}\r\n            >\r\n              Add\r\n            </AddButton>\r\n          </InputContainer>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_MOVIES_AND_PEOPLE = gql`\r\n  query GetMoviesAndPeople {\r\n    movies {\r\n      popular(first: 100) {\r\n        edges {\r\n          node {\r\n            id\r\n            title\r\n            poster(size: Original)\r\n            credits {\r\n              cast {\r\n                value {\r\n                  id\r\n                  name\r\n                  profilePicture(size: Original)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    people {\r\n      popular(first: 100) {\r\n        edges {\r\n          node {\r\n            id\r\n            name\r\n            profilePicture(size: Original)\r\n            credits {\r\n              movies {\r\n                cast {\r\n                  value {\r\n                    id\r\n                    title\r\n                    poster(size: Original)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport shuffle from \"lodash/shuffle\";\r\nimport { ActorQuestion, Question, Survey } from \"../utils/commonTypes\";\r\n\r\nimport { GET_MOVIES_AND_PEOPLE } from \"../utils/gql/graphql\";\r\nimport {\r\n  GetMoviesAndPeople,\r\n  GetMoviesAndPeople_movies_popular_edges as Movie,\r\n  GetMoviesAndPeople_people_popular_edges as People,\r\n} from \"../utils/gql/__generated__/getMoviesAndPeople\";\r\n\r\nconst generateYesQuestion = (\r\n  movies: (Movie | null)[],\r\n  nb: number\r\n): Question[] => {\r\n  const result: Question[] = [];\r\n  let cp = 0;\r\n  while (cp < nb) {\r\n    const index = Math.floor(Math.random() * 100);\r\n    const movie = movies[index];\r\n    if (\r\n      movie &&\r\n      movie.node?.title &&\r\n      movie.node.poster &&\r\n      movie.node.credits.cast[0].value.name &&\r\n      movie.node.credits.cast[0].value.profilePicture &&\r\n      !result.find((m) => m.movie.title === movie.node?.title)\r\n    ) {\r\n      result.push({\r\n        movie: {\r\n          title: movie.node.title!,\r\n          image: movie.node.poster,\r\n        },\r\n        actor: {\r\n          name: movie.node.credits.cast[0].value.name!,\r\n          image: movie.node.credits.cast[0].value.profilePicture,\r\n        },\r\n        answer: \"YES\",\r\n      });\r\n      cp = cp + 1;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst generateNoQuestion = (\r\n  movies: (Movie | null)[],\r\n  people: (People | null)[],\r\n  nb: number\r\n): Question[] => {\r\n  const result: Question[] = [];\r\n  let cp = 0;\r\n  while (cp < nb) {\r\n    const index = Math.floor(Math.random() * 100);\r\n    const movie = movies[index];\r\n    if (\r\n      movie &&\r\n      movie.node?.id &&\r\n      movie.node.title &&\r\n      movie.node.poster &&\r\n      movie.node.credits.cast[0].value.name &&\r\n      movie.node.credits.cast[0].value.profilePicture &&\r\n      !result.find((m) => m.movie.title === movie.node?.title)\r\n    ) {\r\n      result.push({\r\n        movie: {\r\n          title: movie.node.title!,\r\n          image: movie.node.poster,\r\n        },\r\n        actor: getActor(movie, people),\r\n        answer: \"NO\",\r\n      });\r\n      cp = cp + 1;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst getActor = (movie: Movie, people: (People | null)[]): ActorQuestion => {\r\n  const movieActorIds = movie.node?.credits.cast.map((c) => c.value.id);\r\n  const person = shuffle(people).find(\r\n    (person) =>\r\n      movieActorIds &&\r\n      person?.node?.id &&\r\n      !movieActorIds.includes(person.node.id)\r\n  );\r\n  return {\r\n    name: person?.node?.name!,\r\n    image: person?.node?.profilePicture,\r\n  };\r\n};\r\n\r\nconst getNoQuestions = (\r\n  movies: (Movie | null)[] | null | undefined,\r\n  people: (People | null)[] | null | undefined\r\n): Question[] | undefined => {\r\n  if (!movies || !people) return undefined;\r\n  return generateNoQuestion(shuffle(movies), people, 5);\r\n};\r\n\r\nconst getYesQuestions = (\r\n  movies: (Movie | null)[] | null | undefined\r\n): Question[] | undefined => {\r\n  if (!movies) return undefined;\r\n  return generateYesQuestion(shuffle(movies), 5);\r\n};\r\n\r\nexport const useSurvey = (): Survey => {\r\n  const { data, loading, error } = useQuery<GetMoviesAndPeople>(\r\n    GET_MOVIES_AND_PEOPLE,\r\n    { errorPolicy: \"ignore\" }\r\n  );\r\n  const yesQuestions = getYesQuestions(data?.movies.popular.edges);\r\n  const noQuestions = getNoQuestions(\r\n    data?.movies.popular.edges,\r\n    data?.people.popular.edges\r\n  );\r\n  if (yesQuestions && noQuestions) {\r\n    return { data: shuffle([...yesQuestions, ...noQuestions]), loading, error };\r\n  }\r\n  return { data: [], loading, error };\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../../atoms/Button\";\r\n\r\nexport const Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Portrait = styled.img`\r\n  height: 324px;\r\n  width: 243px;\r\n  margin: 30px 15px;\r\n  border-radius: 12px;\r\n`;\r\n\r\nexport const PortraitContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const YesButton = styled(Button)`\r\n  background: #2aeb49;\r\n  width: 243px;\r\n  margin: 30px 15px;\r\n`;\r\n\r\nexport const NoButton = styled(Button)`\r\n  background: #ff5959;\r\n  width: 243px;\r\n  margin: 30px 15px;\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import * as React from \"react\";\r\nimport LinearProgress, {\r\n  LinearProgressProps,\r\n} from \"@mui/material/LinearProgress\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype LinearProgressWithLabelsProps = LinearProgressProps & {\r\n  value: number;\r\n  time: number;\r\n};\r\n\r\nconst LinearProgressWithLabels = (props: LinearProgressWithLabelsProps) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        margin: \"30px\",\r\n      }}\r\n    >\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {`${props.time} s`}\r\n        </Typography>\r\n      </Box>\r\n      <Box sx={{ width: \"70%\", mr: 1, margin: \"10px\" }}>\r\n        <LinearProgress\r\n          variant=\"determinate\"\r\n          {...props}\r\n          value={props.value * 10}\r\n        />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {`✅ ${props.value}`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LinearProgressWithLabels;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Title } from \"../../atoms/Title\";\r\nimport {\r\n  Container,\r\n  PortraitContainer,\r\n  Portrait,\r\n  YesButton,\r\n  NoButton,\r\n  ButtonContainer,\r\n} from \"./Survey.styled\";\r\nimport { LinearProgressWithLabels } from \"../../molecules/LinearProgressWithLabels\";\r\nimport { Survey as SurveyProps } from \"../../../utils/commonTypes\";\r\nimport { ScoreContext } from \"../../../context/scoreContext\";\r\n\r\ntype SurveyState = {\r\n  counter: number;\r\n  score: number;\r\n};\r\n\r\nconst Survey = ({ data }: SurveyProps) => {\r\n  const history = useHistory();\r\n  const { pushResult } = useContext(ScoreContext);\r\n\r\n  const [{ counter, score }, setSurveyState] = useState<SurveyState>({\r\n    counter: 0,\r\n    score: 0,\r\n  });\r\n\r\n  const [seconds, setSeconds] = useState(0);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds((prevState) => prevState + 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const next = () => {\r\n    if (counter < 9) {\r\n      setSurveyState((prevState) => ({\r\n        ...prevState,\r\n        counter: prevState.counter + 1,\r\n        score: prevState.score + 1,\r\n      }));\r\n    } else {\r\n      pushResult({ score: score + 1, seconds });\r\n      history.push(\"/over\");\r\n    }\r\n  };\r\n\r\n  const wrongAnswer = () => {\r\n    pushResult({ score: score, seconds });\r\n    history.push(\"/over\");\r\n  };\r\n\r\n  const rightAnswer = () => {\r\n    next();\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <LinearProgressWithLabels value={score} time={seconds} />\r\n      </Box>\r\n      <Title>Did this actor play in this movie?</Title>\r\n      <PortraitContainer>\r\n        <Portrait\r\n          data-testid=\"survey-image-actor\"\r\n          src={data[counter].actor.image}\r\n          alt={data[counter].actor.name}\r\n        />\r\n        <Portrait\r\n          data-testid=\"survey-image-movie\"\r\n          src={data[counter].movie.image}\r\n          alt={data[counter].movie.title}\r\n        />\r\n      </PortraitContainer>\r\n      <ButtonContainer>\r\n        {data[counter].answer === \"YES\" && (\r\n          <>\r\n            <NoButton onClick={wrongAnswer}>No</NoButton>\r\n            <YesButton onClick={rightAnswer}>Yes</YesButton>\r\n          </>\r\n        )}\r\n        {data[counter].answer === \"NO\" && (\r\n          <>\r\n            <NoButton onClick={rightAnswer}>No</NoButton>\r\n            <YesButton onClick={wrongAnswer}>Yes</YesButton>\r\n          </>\r\n        )}\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n","import React from \"react\";\r\n\r\nimport { useSurvey } from \"../../../hooks/useSurvey\";\r\nimport { Survey } from \"../../organisms/Survey\";\r\n\r\nconst SurveyPage = () => {\r\n  const survey = useSurvey();\r\n  if (survey.loading) return <div>Loading ...</div>;\r\n  if (survey.error) return <div>Error ...</div>;\r\n  return <Survey {...survey} />;\r\n};\r\n\r\nexport default SurveyPage;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { Container, Box } from \"./App.styled\";\r\nimport { Home } from \"../pages/Home\";\r\nimport { GameOver } from \"../pages/GameOver\";\r\nimport { SurveyPage } from \"../pages/SurveyPage\";\r\nimport { ScoreProvider } from \"../../context/scoreContext\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <ScoreProvider>\r\n      <Container>\r\n        <Box>\r\n          <BrowserRouter>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route path=\"/survey\">\r\n                <SurveyPage />\r\n              </Route>\r\n              <Route path=\"/over\">\r\n                <GameOver />\r\n              </Route>\r\n              <Route>\r\n                <Redirect to=\"/\" />\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </Box>\r\n      </Container>\r\n    </ScoreProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n      font-family: sans-serif;\r\n    }\r\n\r\n    body {\r\n        box-sizing: border-box;\r\n        background-color: #F5F6FA;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\r\n\r\nimport { App } from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://tmdb.apps.quintero.io\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n    <GlobalStyle />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}